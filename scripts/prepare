#!/usr/bin/env bash -x -e -u -o pipefail

###############################################################################
# Includes.
###############################################################################

SCRIPT_PATH="$(readlink -f $0)"
SCRIPT_DIR="$(dirname $SCRIPT_PATH)"
SCRIPT_FILE=$(basename $SCRIPT_PATH)
. "$SCRIPT_DIR/functions"

###############################################################################
# Variables.
###############################################################################

RANDOM_SOURCE=''
PASSPHRASE=''

###############################################################################
# Configuration functions.
###############################################################################

usage() {
   echo <<EOT
Usage: $SCRIPT_FILE [OPTIONS]
Options:
   -h                Display this help message and exit.
   -r                Randomize disk contents using /dev/random.
   -u                Randomize disk contents using /dev/urandom.
   -d <device>       Raw device (disk).
   -l <device>       LVM device name.
   -k <device>       Luks device name.
   -m <directory>    Installation mount point.
   -p <passphrase>   Root volume passphrase.
EOT
}

parse_cmd_line() {
   while getopts "hrudlkmp:" opt; do
      case "$opt" in
         h)
            _usage
            exit 0
            ;;
         r)
            [ "$RANDOM_SOURCE" ] && _error "Only a single 'random' or 'urandom' flag can be specified."
            RANDOM_SOURCE='random'
            ;;
         u)
            [ "$RANDOM_SOURCE" ] && _error "Only a single 'random' or 'urandom' flag can be specified."
            RANDOM_SOURCE='urandom'
            ;;
         d)
            [ "$RAW_DEVICE_NAME" ] && _error "Only one raw device can be specified."
            RAW_DEVICE_NAME="$OPTARG"
            ;;
         l)
            [ "$LVM_DEVICE_NAME" ] && _error "Only one LVM device can be specified."
            LVM_DEVICE_NAME="$OPTARG"
            ;;
         k)
            [ "$LUKS_DEVICE_NAME" ] && _error "Only one luks device can be specified."
            LUKS_DEVICE_NAME="$OPTARG"
            ;;
         m)
            [ "$MNT_POINT" ] && _error "Only one mount point can be specified."
            MNT_POINT="$OPTARG"
            ;;
         p)
            [ "$PASSPHRASE" ] && _error "Only one passphrase can be specified."
            PASSPHRASE="$OPTARG"
            ;;
         \?)
            _usage
            exit 1
            ;;
      esac
   done
}

validate_cmd_line() {
   [ ! "$RANDOM_SOURCE" ] || [ "_$RANDOM_SOURCE" = "_random" ] ||
    [ "_$RANDOM_SOURCE" = "_urandom" ] || _error "A raw device (disk) must be specified."
   [ ! -e "$RAW_DEVICE_NAME" ] && _error "A valid raw device (disk) must be specified."
   [ ! "$LVM_DEVICE_NAME" ] && _error "An LVM volume name must be specified."
   [ ! "$LUKS_DEVICE_NAME" ] && _error "A luks volume name must be specified."
   [ ! "$MNT_POINT" ] && _error "A mount point must be specified."
   [ ! "$PASSPHRASE" ] && _error "A root volume passphrase must be specified."
}

###############################################################################
# Command wrappers.
###############################################################################

_parted() {
   parted --script --align optimal -- $@
}

_mkpart() {
   local disk="$1"
   local part="$2"
   local start="$3"
   local end="$4"
   local name="$5"
   local flag="$6"

   [ "$disk" ] && [ "$part" ] && [ "$start" ] && [ "$end" ]

   _parted "$disk" mkpart primary "$start" "$end"
   [ "$name" ] && (_parted "$disk" name "$part" "$name") || true
   [ "$flag" ] && (_parted "$disk" set "$part" "$flag" on) || true
}

_mount() {
   local device="$1"
   local directory="$2"

   [ "$device" ] && [ "$directory" ]

   mkdir -p "$directory"
   mount "$device" "$directory"
}

_format() {
   local device="$1"
   local fstype="$2"

   [ "$device" ] && [ "$fstype" ]

   mkfs.$fstype "$device"
}

###############################################################################
# Disk preparation.
###############################################################################

randomize() {
   local disk="$1"
   local method="$2"

   [ "$disk" ] && [ "$method" ]

   dd if="/dev/$method" of="$disk" bs=32M iflag=fullblock
}

raw_partition() {
   local disk="$1"

   [ "$disk" ]

   _parted "$disk" mklabel gpt
   _mkpart "$disk" 1 2 4 grub bios_grub
   _mkpart "$disk" 2 4 204 boot boot
   _mkpart "$disk" 3 204 -1 lvm lvm
}

lvm_partition() {
   local device="$1"
   local group="$2"

   [ "$disk" ] && [ "$group" ]

   pvcreate "$device"
   vgcreate "$group" "$device"
   lvcreate --name root --size 2G "$group"
   lvcreate --name home --size 4G "$group"
   lvcreate --name usr --size 2G "$group"
   lvcreate --name var --size 2G "$group"
   lvcreate --name tmp --size 2G "$group"
   lvcreate --name swap --size 2G "$group"
}

make_key() {
   local label="$1"
   local keydir="$(mnt_point root)/etc/cryptkeys"
   local keyfile="$keydir/$label"

   [ "$label" ]

   mkdir -p "$keydir"
   chmod 400 "$keydir"

   dd if=/dev/random of="$keyfile" bs=512 count=4 iflag=fullblock
   chmod 400 "$keyfile"

   echo "$keyfile"
}

luks_fmt_phrase() {
   local label="$1"
   local passphrase="$2"
   local device="$(luks_device $label)"
   local cryptsetup="cryptsetup -q --key-file -"

   [ "$label" ] && [ "$passphrase" ]

   echo "$passphrase" | $cryptsetup luksFormat "$device"
   echo "$passphrase" | $cryptsetup luksOpen "$device" "$(luks_volume $label)"
}

luks_fmt_key() {
   local label="$1"
   local keyfile="$(make_key $label)"
   local device="$(luks_device $label)"
   local cryptsetup="cryptsetup -q --key-file $keyfile"

   [ "$label" ] && [ "$keyfile" ]

   $cryptsetup luksFormat "$device"
   $cryptsetup luksOpen "$device" "$(luks_volume $label)"
}

###############################################################################
# Instructions.
###############################################################################

parse_cmd_line
validate_cmd_line

randomize "$RAW_DEVICE_NAME" "$RANDOM_SOURCE"
raw_partition "$RAW_DEVICE_NAME"
lvm_partition "$(raw_lvm_device)" "$LVM_DEVICE_NAME"

luks_fmt_phrase root "$PASSPHRASE"
_format "$(luks_device root)" ext4
_mount "$(luks_device root)" "$(mnt_point root)"

luks_fmt_key home
luks_fmt_key usr
luks_fmt_key var
luks_fmt_key tmp
luks_fmt_key swap

_format "$(raw_boot_device)" ext4
_format "$(luks_device home)" ext4
_format "$(luks_device usr)" ext4
_format "$(luks_device var)" ext4
_format "$(luks_device tmp)" ext4
mkswap "$(luks_device swap)"

_mount "$(raw_boot_device)" "$(mnt_point boot)"
_mount "$(luks_device home)" "$(mnt_point home)"
_mount "$(luks_device usr)" "$(mnt_point usr)"
_mount "$(luks_device var)" "$(mnt_point var)"
_mount "$(luks_device tmp)" "$(mnt_point tmp)"
swapon "$(luks_device swap)"

